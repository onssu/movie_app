{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","limit","offset","_infiniteScroll","scrollHeight","Math","max","document","documentElement","body","scrollTop","clientHeight","setTimeout","setState","getMovies","a","axios","get","data","this","window","addEventListener","movie","id","medium_cover_image","React","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"mRAiCeA,MA7Bf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,sBAAKC,UAAU,QAAf,UACE,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACE,oBAAIA,UAAU,cAAd,SAA6BJ,IAC7B,oBAAII,UAAU,aAAd,SAA4BL,IAC5B,oBAAIK,UAAU,eAAd,SACGD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACV,oBAAgBL,UAAU,gBAA1B,SACGI,GADMC,QAKb,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBC6DOC,G,kNAzEbC,MAAQ,CACNC,WAAW,EACXC,OAAQ,GACRC,MAAO,EACPC,OAAQ,G,EAGVC,gBAAkB,WAChB,IAAIC,EAAeC,KAAKC,IACtBC,SAASC,gBAAgBJ,aACzBG,SAASE,KAAKL,cAGAC,KAAKC,IACnBC,SAASC,gBAAgBE,UACzBH,SAASE,KAAKC,WAGGH,SAASC,gBAAgBG,eAEXP,IAC/BQ,YAAW,WACT,EAAKC,SAAS,CAAEX,OAAQ,EAAKJ,MAAMI,OAAS,MAC3C,KACH,EAAKY,c,EAITA,U,sBAAY,8BAAAC,EAAA,sEAKAC,IAAMC,IACd,yEANQ,gBAGEjB,EAHF,EAERkB,KACEA,KAAQlB,OAKZ,EAAKa,SAAS,CAAEb,SAAQD,WAAW,IARzB,2C,kEAaVoB,KAAKL,YACLM,OAAOC,iBAAiB,SAAUF,KAAKhB,iBAAiB,K,+BAGhD,IAAD,EACsCgB,KAAKrB,MAA1CC,EADD,EACCA,UAAWC,EADZ,EACYA,OAAQC,EADpB,EACoBA,MAAOC,EAD3B,EAC2BA,OAClC,OACE,yBAASZ,UAAU,YAAnB,SACGS,EACC,qBAAKT,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGU,EAAOJ,MAAM,EAAGK,EAAiB,EAATC,GAAYT,KAAI,SAAC6B,GAAD,OACvC,cAAC,EAAD,CAEEC,GAAID,EAAMC,GACVtC,KAAMqC,EAAMrC,KACZC,MAAOoC,EAAMpC,MACbC,QAASmC,EAAMnC,QACfC,OAAQkC,EAAME,mBACdnC,OAAQiC,EAAMjC,QANTiC,EAAMC,e,GA1DTE,IAAMC,YCDxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFtB,SAASuB,eAAe,W","file":"static/js/main.abc1b378.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({ year, title, summary, poster, genres }) {\n  return (\n    <div className=\"movie\">\n      <img src={poster} alt={title} title={title} />\n      <div className=\"movie_data\">\n        <h3 className=\"movie_title\">{title}</h3>\n        <h5 className=\"movie_year\">{year}</h5>\n        <ul className=\"movie_genres\">\n          {genres.map((genre, index) => (\n            <li key={index} className=\"genres__genre\">\n              {genre}\n            </li>\n          ))}\n        </ul>\n        <p className=\"movie_summary\">{summary.slice(0, 180)}...</p>\n      </div>\n    </div>\n  );\n}\n\nMovie.propTypes = {\n  id: PropTypes.number.isRequired,\n  year: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired,\n  summary: PropTypes.string.isRequired,\n  poster: PropTypes.string.isRequired,\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component {\n  state = {\n    isLoading: true,\n    movies: [],\n    limit: 4,\n    offset: 1,\n  };\n\n  _infiniteScroll = () => {\n    let scrollHeight = Math.max(\n      document.documentElement.scrollHeight,\n      document.body.scrollHeight\n    );\n\n    let scrollTop = Math.max(\n      document.documentElement.scrollTop,\n      document.body.scrollTop\n    );\n\n    let clientHeight = document.documentElement.clientHeight;\n\n    if (scrollTop + clientHeight === scrollHeight) {\n      setTimeout(() => {\n        this.setState({ offset: this.state.offset + 1 });\n      }, 500);\n      this.getMovies();\n    }\n  };\n\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\n      \"https://yts-proxy.nomadcoders1.now.sh/list_movies.json?sort_by=rating\"\n    );\n    this.setState({ movies, isLoading: false }); //movies 생략가능\n  }; //await async 우린 시간이 필요해 , 항상 짝이 맞아야함\n\n  componentDidMount() {\n    //렌더 되자마자 호출\n    this.getMovies();\n    window.addEventListener(\"scroll\", this._infiniteScroll, true);\n  }\n\n  render() {\n    const { isLoading, movies, limit, offset } = this.state;\n    return (\n      <section className=\"container\">\n        {isLoading ? (\n          <div className=\"loader\">\n            <span className=\"loader__text\">Loading...</span>\n          </div>\n        ) : (\n          <div className=\"movies\">\n            {movies.slice(0, limit + offset * 2).map((movie) => (\n              <Movie\n                key={movie.id}\n                id={movie.id}\n                year={movie.year}\n                title={movie.title}\n                summary={movie.summary}\n                poster={movie.medium_cover_image}\n                genres={movie.genres}\n              />\n            ))}\n          </div>\n        )}\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}